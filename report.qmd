---
title: "Final Project Paper"
format: docx
editor: visual
author: "Ekaterina Hofrenning, Lauren Lazaro, Arthur Starodynov, Yuki Low"
---

## Abstract (condenses a brief introduction, brief description of methods, and main results into a one-paragraph summary)

## Introduction (brief context and background of the problem)

It is well-documented that educational success is influenced by a multitude of factors that extend beyond one's academic preparation. Our study aims to predict math, reading and writing scores based on personal and socio-economic variables. The dataset used for our study provides us with a diverse range of variables and gives us the opportunity to uncover patterns that influence a student's test outcome.

## Methods (data description and statistical methods)

The dataset is a sample of 948 individuals from a public school with math, reading, and writing test scores (ranging from 0-100) and the following variables of interest: gender, ethnic group, parental education, lunch type, test prep, parent's marital status, sports participation, first child, number of siblings, means of transportation to school, number of weekly study hours. Due to significant missing data, we imputed the missing values with the average or most common value per variable.

Math, reading and writing tests scores were the response variables and were scored from 0 to 100. Math test scores ranged from 0 to 100 with a mean score of 65.9821 and a median score of 66. Reading test scores ranged from 17 to 100 with a mean score of 68.8418 and a median score of 69.5. Writing test scores ranged from 10 to 100 with a mean score of 67.9293 and a median score of 68. The histograms of the distributions of math, reading and writing tests scores are slightly skewed to the left. In order to make the distributions more normal, we attempted both logarithmic transformations and square root transformations in which both of these types of transformations resulted in more severely skewed distributions. In the end, we decided to proceed with using no transformation on the test score variables.

We conducted a data description (Table 1), computing the averages and standard deviations for continuous variables and counts and percentages for categorical variables. Our sample is well-balanced across sex. The sample is composed of majority first born children, children on standard fee lunch, children with married parents, school bus riders, and children who study 5-10 hours. The average number of siblings is 2.

```{r, libraries, warning = F, message = F, echo = F}
library(tidyverse)
library(lubridate)
library(readr) 
library(xts)
library(RColorBrewer)
library(ggthemes)
library(gridExtra)
library(gtsummary)
library(flextable)
library(broom)
```

```{r, read data, message = F, warning = F, echo = F}
data <- read_csv("./Project_1_data.csv")

order_parent_educ_categories <- c('some high school', 'high school', "associate's degree", 'some college', "bachelor's degree", "master's degree")
order_ethnic_categories <- c('group A', 'group B', 'group C', 'group D', 'group E')
order_sib <- c("never", "sometimes", "regularly")
order_studyhrs <- c("< 5", "5-10", "> 10")

data_cleaned <- data.frame(apply(data, 2, function(x) ifelse(is.na(x), names(sort(table(x), decreasing = TRUE)[1]), x))) %>% 
  mutate(Gender = as.factor(Gender), 
         MathScore = as.integer(MathScore), 
         ReadingScore = as.integer(ReadingScore), 
         WritingScore = as.integer(WritingScore),
         ParentEduc = factor(ParentEduc, levels = order_parent_educ_categories, ordered = TRUE), 
         EthnicGroup = factor(EthnicGroup, levels = order_ethnic_categories, ordered = TRUE),
         NrSiblings = as.integer(NrSiblings),
         IsFirstChild = as.factor(IsFirstChild),
         PracticeSport = factor(PracticeSport, levels = order_sib, ordered = TRUE),
         LunchType = as.factor(LunchType), 
         TestPrep = as.factor(TestPrep),
         ParentMaritalStatus = as.factor(ParentMaritalStatus),
         TransportMeans = as.factor(TransportMeans),
         WklyStudyHours = if_else(WklyStudyHours == "10-May", "5-10", WklyStudyHours),
         WklyStudyHours = factor(WklyStudyHours, levels = order_studyhrs, ordered = TRUE))

```

```{r, message = F, warning = F, echo = F}
table1 <- 
tbl_summary(data_cleaned,
            statistic = list(all_continuous() ~ "{mean} ({sd})",
                   all_categorical() ~ "{n} / {N} ({p}%)"),
            type = "NrSiblings" ~ "continuous") %>%
  modify_caption("**Table 1. Overall Characteristics**")

table1 %>% as_flex_table()
```

After looking at the histograms of the continuous outcomes, we decided that the variables looked fairly normal so we did not use log transformations.

We used a few different methods for model building. First, we decided to use backwards, forwards and stepwise regression. Then, we split our data into training and validation sets for each student (math, reading, writing). We used Lasso regression to select important variables and their coefficients. We also proceeded with building Random Forest models to predict the scores for each student. Our model was then validated using the validation sets.

The chosen model was then tested through model diagnostics and influential observation diagnostics to make sure all assumptions are met and no significant outliers were influencing the model.

## Results

From the SLR model, we found that the linear association between MathScore and the predictors LunchType, Gender, TestPrep and WklyStudyHours were significant. The average increase in MathScore was 8.7216 (p=3e-09) for students of ethnic group B and 3.4986 (p=0.00759) for students of ethnic group C compared to students of ethnic group A without adjusting for all other covariates. The average increase in MathScore between students with parents with some high school education and students with parents who completed their high school education was 6.0952 (p=0.000139) without adjusting for all other covariates. The average decrease in MathScore between students with parents with some high school education and students with parents who have their Master's degree was 2.8793 (p=0.009353) without adjusting for all other covariates. The average increase in MathScore between students with divorced parents and students with married parents was 4.142 (p=0.040) without adjusting for all other covariates. The average decrease in MathScore was 3.6763 (p=0.041) for students with 1 sibling and 3.8757 (p=0.0390) for students with 2 siblings compared to only children without adjusting for all other covariates. Note that the linear association between MathScore and PracticeSport, IsFirstChild, and TransportMeans were not significant.

From the SLR model, we found that the linear association between ReadingScore and the predictors LunchType, Gender, TestPrep and IsFirstChild were significant. The average increase in ReadingScore between students of ethnic group A and ethnic group B was 5.95373 (p=2.64e-05) without adjusting for all other covariates. The average increase in ReadingScore between students with parents with some high school education and students with parents who completed their high school education was 8.2312 (p=5.85e-08) without adjusting for all other covariates. The average decrease in ReadingScore between students with parents with some high school education and students with parents who have their Master's degree was 3.5466 (p=0.000717) without adjusting for all other covariates. The average increase in ReadingScore between students with divorced parents and students with married parents was 3.965 (p=0.039) without adjusting for all other covariates. The average increase in ReadingScore between students who studied less than 5 hours and students who studied 10-May was 2.6298 (p=0.0194) without adjusting for all other covariates. The average difference in ReadingScore between students who studied less than 5 hours and students who studied greater than 10 hours was insignificant (p=0.0541) without adjusting for all other covariates. Note that the linear association between ReadingScore and PracticeSport, NrSiblings, and TransportMeans were not significant.

After fitting a MLR using forwards, backwards and stepwise regression model building methods, we noticed that the linear association between ReadingScore and EthnicGroup, ParentEduc, ParentMaritalStatus and WklyStudyHours became significant after adjusting for all other covariates. Note that the linear association between ReadingScore and Gender, LunchType, TestPrep and IsFirstChild were still significant after adjusting for all other covariates. Note that each of the three methods selected the same results. Therefore, for ReadingScore as the outcome, the optimal predictors are Gender, EthnicGroup, ParentEduc, LunchType, TestPrep, ParentMaritalStatus, IsFirstChild, and WklyStudyHours.

For math score as the outcome, the optimal predictors are Gender, EthnicGroup, ParentEduc, LunchType, TestPrep, ParentMaritalStatus, PracticeSport, IsFirstChild, and WklyStudyHours. The reported AIC for all three of the model building methods we used was 4924.44. For Reading score as the outcome, the optimal predictors are Gender, EthnicGroup, ParentEduc, LunchType, TestPrep, ParentMaritalStatus, IsFirstChild, and WklyStudyHours. For writing score as the outcome, the optimal predictors are Gender, EthnicGroup, ParentEduc, LunchType, TestPrep, ParentMaritalStatus, PracticeSport, IsFirstChild, and WklyStudyHours.

```{r, warning = F, message = F, echo = F}
## Math
# Backwards stepwise regression
math_full <- lm(MathScore ~ ., data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
step(math_full, direction = "backward")
```

```{r, warning = F, message = F, echo = F}
# Math
math_back <- lm(formula = MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + 
     TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))

math_back %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Table 2. Math score stepwise model")
```

```{r, warning = F, message = F, echo = F}
## Reading
# Backwards stepwise regression
reading_full <- lm(ReadingScore ~ ., data = data_cleaned %>% select(-c(MathScore, WritingScore)))
```

```{r, warning = F, message = F, echo = F}
# Reading
reading_back <- lm(formula = ReadingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(MathScore, WritingScore)))

reading_back %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Table 3. Reading score stepwise model")
```

\

```{r, warning = F, message = F, echo = F}
## Writing
# Backwards stepwise regression
writing_full <- lm (WritingScore ~ ., data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
step(writing_full, direction = "backward")
```

```{r, warning = F, message = F, echo = F}
# Writing
writing_back <- lm(formula = WritingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% dplyr::select(-c(MathScore, ReadingScore)))

writing_back %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Writing score stepwise model")
```

\\

```{r, warning = F, message = F, echo = F}
## Math
# Forwards stepwise regression
math_full <- lm(MathScore ~ ., data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
math_int <- lm(MathScore ~ 1, data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
step(math_int, direction = "forward", scope = formula(math_full))
```

```{r, warning = F, message = F, echo = F}
# Math
math_for <- lm(formula = MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + 
     TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(ReadingScore, WritingScore))) # (comes from step() above)

math_for %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Math score forwards stepwise model")
```

\

```{r, warning = F, message = F, echo = F}
## Reading
# Forwards stepwise regression
reading_full <- lm(ReadingScore ~ ., data = data_cleaned %>% select(-c(MathScore, WritingScore)))
reading_int <- lm(ReadingScore ~ 1, data = data_cleaned %>% select(-c(MathScore, WritingScore)))
step(reading_int, direction = "forward", scope = formula(reading_full))
```

```{r, warning = F, message = F, echo = F}
reading_for <- lm(formula = ReadingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(MathScore, WritingScore))) # (comes from step() above)

reading_for %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Reading score forwards stepwise model")
```

\

```{r, warning = F, message = F, echo = F}
## Writing
# Forwards stepwise regression
writing_full <- lm (WritingScore ~ ., data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
writing_int <- lm (WritingScore ~ 1, data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
step(writing_int, direction = "forward", scope = formula(writing_full))
```

```{r, warning = F, message = F, echo = F}
# Writing
writing_for <- lm(formula = WritingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% dplyr::select(-c(MathScore, ReadingScore))) # (comes from step() above)

writing_for %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Writing score forwards stepwise model")
```

\\

```{r, warning = F, message = F, echo = F}
## Math
# stepwise regression
math_full <- lm(MathScore ~ ., data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
math_int <- lm(MathScore ~ 1, data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
step(math_int, direction = "both", scope = formula(math_full))
```

```{r, warning = F, message = F, echo = F}
# Math
math_both <- lm(formula = MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + 
     TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(ReadingScore, WritingScore))) # (comes from step() above)

math_both %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Math score stepwise model")
```

\

```{r, warning = F, message = F, echo = F}
## Reading
# stepwise regression
reading_full <- lm(ReadingScore ~ ., data = data_cleaned %>% select(-c(MathScore, WritingScore)))
reading_int <- lm(ReadingScore ~ 1, data = data_cleaned %>% select(-c(MathScore, WritingScore)))
step(reading_int, direction = "both", scope = formula(reading_full))
```

```{r, warning = F, message = F, echo = F}
reading_both <- lm(formula = ReadingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(MathScore, WritingScore))) # (comes from step() above)

reading_both %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Reading score stepwise model")
```

\

```{r, warning = F, message = F, echo = F}
## Writing
# stepwise regression
writing_full <- lm (WritingScore ~ ., data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
writing_int <- lm (WritingScore ~ 1, data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
step(writing_int, direction = "both", scope = formula(writing_full))
```

```{r, warning = F, message = F, echo = F}
# Writing
writing_both <- lm(formula = WritingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% dplyr::select(-c(MathScore, ReadingScore))) # (comes from step() above)

writing_both %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Writing score stepwise model")
```

## Conclusions/Discussion

## A brief summary on each group member's contribution (method, data analysis, writing, etc).
