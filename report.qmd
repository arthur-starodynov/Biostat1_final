---
title: "Final Project Paper"
format: docx
editor: visual
author: "Ekaterina Hofrenning, Lauren Lazaro, Arthur Starodynov, Yuki Low"
---

## Abstract (condenses a brief introduction, brief description of methods, and main results into a one-paragraph summary)

## Introduction (brief context and background of the problem)

It is well-documented that educational success is influenced by a multitude of factors that extend beyond one's academic preparation. Our study aims to predict math, reading and writing scores based on personal and socio-economic variables. The dataset used for our study provides us with a diverse range of variables and gives us the opportunity to uncover patterns that influence a student's test outcome.

## Methods (data description and statistical methods)

The dataset is a sample of 948 individuals from a public school with math, reading, and writing test scores (ranging from 0-100) and the following variables of interest: gender, ethnic group, parental education, lunch type, test prep, parent's marital status, sports participation, first child, number of siblings, means of transportation to school, number of weekly study hours. Due to significant missing data, we imputed the missing values with the average or most common value per variable.

Math, reading and writing tests scores were the response variables and were scored from 0 to 100. Math test scores ranged from 0 to 100 with a mean score of 65.9821 and a median score of 66. Reading test scores ranged from 17 to 100 with a mean score of 68.8418 and a median score of 69.5. Writing test scores ranged from 10 to 100 with a mean score of 67.9293 and a median score of 68. The histograms of the distributions of math, reading and writing tests scores are slightly skewed to the left. In order to make the distributions more normal, we attempted both logarithmic transformations and square root transformations in which both of these types of transformations resulted in more severely skewed distributions. In the end, we decided to proceed with using no transformation on the test score variables.

We conducted a data description (Table 1), computing the averages and standard deviations for continuous variables and counts and percentages for categorical variables. Our sample is well-balanced across sex. The sample is composed of majority first born children, children on standard fee lunch, children with married parents, school bus riders, and children who study 5-10 hours. The average number of siblings is 2.

```{r, libraries, warning = F, message = F, echo = F}
library(tidyverse)
library(lubridate)
library(readr) 
library(xts)
library(RColorBrewer)
library(ggthemes)
library(gridExtra)
library(gtsummary)
library(flextable)
library(broom)
library(olsrr)
library(RcmdrMisc)
library(leaps)
library(ISLR)
```

```{r, read data, message = F, warning = F, echo = F}
data <- read_csv("./Project_1_data.csv")

order_parent_educ_categories <- c('some high school', 'high school', "associate's degree", 'some college', "bachelor's degree", "master's degree")
order_ethnic_categories <- c('group A', 'group B', 'group C', 'group D', 'group E')
order_sib <- c("never", "sometimes", "regularly")
order_studyhrs <- c("< 5", "5-10", "> 10")

data_cleaned <- data.frame(apply(data, 2, function(x) ifelse(is.na(x), names(sort(table(x), decreasing = TRUE)[1]), x))) %>% 
  mutate(Gender = as.factor(Gender), 
         MathScore = as.integer(MathScore), 
         ReadingScore = as.integer(ReadingScore), 
         WritingScore = as.integer(WritingScore),
         ParentEduc = factor(ParentEduc, levels = order_parent_educ_categories, ordered = TRUE), 
         EthnicGroup = factor(EthnicGroup, levels = order_ethnic_categories, ordered = TRUE),
         NrSiblings = as.integer(NrSiblings),
         IsFirstChild = as.factor(IsFirstChild),
         PracticeSport = factor(PracticeSport, levels = order_sib, ordered = TRUE),
         LunchType = as.factor(LunchType), 
         TestPrep = as.factor(TestPrep),
         ParentMaritalStatus = as.factor(ParentMaritalStatus),
         TransportMeans = as.factor(TransportMeans),
         WklyStudyHours = if_else(WklyStudyHours == "10-May", "5-10", WklyStudyHours),
         WklyStudyHours = factor(WklyStudyHours, levels = order_studyhrs, ordered = TRUE))

```

```{r, message = F, warning = F, echo = F}
table1 <- 
tbl_summary(data_cleaned,
            statistic = list(all_continuous() ~ "{mean} ({sd})",
                   all_categorical() ~ "{n} / {N} ({p}%)"),
            type = "NrSiblings" ~ "continuous") %>%
  modify_caption("**Table 1. Overall Characteristics**")

table1 %>% as_flex_table()
```

After looking at the histograms of the continuous outcomes, we decided that the variables looked fairly normal so we did not use log transformations.

We employed a multi-faceted approach to model building. Initially, we fit simple linear regression models for each of the three scores, utilizing all available covariates in our dataset. Subsequently, we conducted a comprehensive exploration by implementing backward, forward, and stepwise regression techniques. This allowed us to assess how variables varied when adjusting for all covariates through multiple linear regression modeling. The combination of these methods provided a nuanced understanding of the relationships between predictors and scores, capturing both individual and collective effects.

The chosen model was then tested through model diagnostics and influential observation diagnostics to make sure all assumptions are met and no significant outliers were influencing the model.

## Results

From the SLR model, we found that the linear association between MathScore and the predictors LunchType, Gender, TestPrep and WklyStudyHours were significant. The average increase in MathScore was 8.7216 (p=3e-09) for students of ethnic group B and 3.4986 (p=0.00759) for students of ethnic group C compared to students of ethnic group A without adjusting for all other covariates. The average increase in MathScore between students with parents with some high school education and students with parents who completed their high school education was 6.0952 (p=0.000139) without adjusting for all other covariates. The average decrease in MathScore between students with parents with some high school education and students with parents who have their Master's degree was 2.8793 (p=0.009353) without adjusting for all other covariates. The average increase in MathScore between students with divorced parents and students with married parents was 4.142 (p=0.040) without adjusting for all other covariates. The average decrease in MathScore was 3.6763 (p=0.041) for students with 1 sibling and 3.8757 (p=0.0390) for students with 2 siblings compared to only children without adjusting for all other covariates. Note that the linear association between MathScore and PracticeSport, IsFirstChild, and TransportMeans were not significant.

After fitting a MLR using forwards, backwards and stepwise regression model building methods, we noticed that the linear association between MathScore and EthnicGroup, ParentEduc, ParentMaritalStatus, PracticeSport and IsFirstChild became significant after adjusting for all other covariates. Note that the linear association between MathScore and LunchType, Gender, TestPrep and WklyStudyHours were still significant after adjusting for all other covariates. Therefore, for Mathscore as the outcome, the optimal predictors are Gender, EthnicGroup, ParentEduc, LunchType, TestPrep, ParentMaritalStatus, PracticeSport, IsFirstChild, and WklyStudyHours. Our estimates for coefficients for each of our significant covariates associated with MathScore are located in our Appendix in Table 2, 3 and 4. Note that each of the three methods selected the same results.

```{r, warning = F, message = F, eval = F, echo = F}
## Math
# Backwards stepwise regression
math_full <- lm(MathScore ~ ., data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
step(math_full, direction = "backward")
```

```{r, warning = F, message = F, echo = F}
# Math
math_back <- lm(formula = MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + 
     TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))

math_back %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Table 2. Math score stepwise model")
```

From the SLR model, we found that the linear association between ReadingScore and the predictors LunchType, Gender, TestPrep and IsFirstChild were significant. The average increase in ReadingScore between students of ethnic group A and ethnic group B was 5.95373 (p=2.64e-05) without adjusting for all other covariates. The average increase in ReadingScore between students with parents with some high school education and students with parents who completed their high school education was 8.2312 (p=5.85e-08) without adjusting for all other covariates. The average decrease in ReadingScore between students with parents with some high school education and students with parents who have their Master's degree was 3.5466 (p=0.000717) without adjusting for all other covariates. The average increase in ReadingScore between students with divorced parents and students with married parents was 3.965 (p=0.039) without adjusting for all other covariates. The average increase in ReadingScore between students who studied less than 5 hours and students who studied 10-May was 2.6298 (p=0.0194) without adjusting for all other covariates. The average difference in ReadingScore between students who studied less than 5 hours and students who studied greater than 10 hours was insignificant (p=0.0541) without adjusting for all other covariates. Note that the linear association between ReadingScore and PracticeSport, NrSiblings, and TransportMeans were not significant.

After fitting a MLR using forwards, backwards and stepwise regression model building methods, we noticed that the linear association between ReadingScore and EthnicGroup, ParentEduc, ParentMaritalStatus and WklyStudyHours became significant after adjusting for all other covariates. Note that the linear association between ReadingScore and Gender, LunchType, TestPrep and IsFirstChild were still significant after adjusting for all other covariates. Note that each of the three methods selected the same results. Therefore, for ReadingScore as the outcome, the optimal predictors are Gender, EthnicGroup, ParentEduc, LunchType, TestPrep, ParentMaritalStatus, IsFirstChild, and WklyStudyHours.

```{r, warning = F, message = F, echo = F, eval = F}
## Reading
# Backwards stepwise regression
reading_full <- lm(ReadingScore ~ ., data = data_cleaned %>% select(-c(MathScore, WritingScore)))
```

```{r, warning = F, message = F, echo = F}
# Reading
reading_back <- lm(formula = ReadingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(MathScore, WritingScore)))

reading_back %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Table 3. Reading score stepwise model")
```

For writing score as the outcome, the optimal predictors are Gender, EthnicGroup, ParentEduc, LunchType, TestPrep, ParentMaritalStatus, PracticeSport, IsFirstChild, and WklyStudyHours.

Model diagnosis is an essential step in the modeling process. The models need to be checked through visual and statistical tests to make sure all assumptions are met. Through this process, we could evaluate if the models we fit well represented our study.

```{r, warning = F, message = F, echo = F}
plot(math_back)
```

```{r, warning = F, message = F, echo = F, results = "hide"}
## Writing
# Backwards stepwise regression
writing_full <- lm (WritingScore ~ ., data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
step(writing_full, direction = "backward")
```

```{r, warning = F, message = F, echo = F}
# Writing
writing_back <- lm(formula = WritingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% dplyr::select(-c(MathScore, ReadingScore)))

writing_back %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Writing score stepwise model")
```

\\

```{r, warning = F, message = F, echo = F, results = "hide"}
## Math
# Forwards stepwise regression
math_full <- lm(MathScore ~ ., data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
math_int <- lm(MathScore ~ 1, data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
step(math_int, direction = "forward", scope = formula(math_full))
```

```{r, warning = F, message = F, echo = F, results = "hide"}
# Math
math_for <- lm(formula = MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + 
     TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(ReadingScore, WritingScore))) # (comes from step() above)

math_for %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Math score forwards stepwise model")
```

\

```{r, warning = F, message = F, echo = F, results = "hide"}
## Reading
# Forwards stepwise regression
reading_full <- lm(ReadingScore ~ ., data = data_cleaned %>% select(-c(MathScore, WritingScore)))
reading_int <- lm(ReadingScore ~ 1, data = data_cleaned %>% select(-c(MathScore, WritingScore)))
step(reading_int, direction = "forward", scope = formula(reading_full))
```

```{r, warning = F, message = F, echo = F, results = "hide"}
reading_for <- lm(formula = ReadingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(MathScore, WritingScore))) # (comes from step() above)

reading_for %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Reading score forwards stepwise model")
```

\

```{r, warning = F, message = F, echo = F, results = "hide"}
## Writing
# Forwards stepwise regression
writing_full <- lm (WritingScore ~ ., data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
writing_int <- lm (WritingScore ~ 1, data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
step(writing_int, direction = "forward", scope = formula(writing_full))
```

```{r, warning = F, message = F, echo = F, results = "hide"}
# Writing
writing_for <- lm(formula = WritingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% dplyr::select(-c(MathScore, ReadingScore))) # (comes from step() above)

writing_for %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Writing score forwards stepwise model")
```

\\

```{r, warning = F, message = F, echo = F, results = "hide"}
## Math
# stepwise regression
math_full <- lm(MathScore ~ ., data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
math_int <- lm(MathScore ~ 1, data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
step(math_int, direction = "both", scope = formula(math_full))
```

```{r, warning = F, message = F, echo = F, results = "hide"}
# Math
math_both <- lm(formula = MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + 
     TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(ReadingScore, WritingScore))) # (comes from step() above)

math_both %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Math score stepwise model")
```

\

```{r, warning = F, message = F, echo = F, results = "hide"}
## Reading
# stepwise regression
reading_full <- lm(ReadingScore ~ ., data = data_cleaned %>% select(-c(MathScore, WritingScore)))
reading_int <- lm(ReadingScore ~ 1, data = data_cleaned %>% select(-c(MathScore, WritingScore)))
step(reading_int, direction = "both", scope = formula(reading_full))
```

```{r, warning = F, message = F, echo = F, results = "hide"}
reading_both <- lm(formula = ReadingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% select(-c(MathScore, WritingScore))) # (comes from step() above)

reading_both %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Reading score stepwise model")
```

\

```{r, warning = F, message = F, echo = F, results = "hide"}
## Writing
# stepwise regression
writing_full <- lm (WritingScore ~ ., data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
writing_int <- lm (WritingScore ~ 1, data = data_cleaned %>% select(-c(MathScore, ReadingScore)))
step(writing_int, direction = "both", scope = formula(writing_full))
```

```{r, warning = F, message = F, echo = F, results = "hide"}
# Writing
writing_both <- lm(formula = WritingScore ~ Gender + EthnicGroup + ParentEduc + 
    LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours, 
   data = data_cleaned %>% dplyr::select(-c(MathScore, ReadingScore))) # (comes from step() above)

writing_both %>% 
  broom::tidy() %>%
  dplyr::select(term, estimate, p.value) %>%
  mutate(estimate = round(estimate, 3),
         p.value = round(p.value, 3),
         p.value = case_when(p.value < .001 ~ "<.001", p.value >= .001 ~ as.character(p.value))) %>%
  kableExtra::kable(caption = "Writing score stepwise model")
```

\\


```{r p-values, echo = F, warning = F, message = F, results='hide'}
## Math
math_full <- lm(MathScore ~ ., data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))

ols_step_forward_p(math_full)
math_pval_for <- lm(MathScore ~ LunchType + TestPrep + EthnicGroup + Gender + ParentEduc + 
                      WklyStudyHours + ParentMaritalStatus + IsFirstChild + PracticeSport + NrSiblings, 
                    data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))

ols_step_backward_p(math_full)
math_pval_back <- lm(MathScore ~ TransportMeans, data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))

ols_step_both_p(math_full)
math_pval_both <- lm(MathScore ~ LunchType + TestPrep + EthnicGroup + Gender + ParentEduc + WklyStudyHours +
                       ParentMaritalStatus + IsFirstChild + PracticeSport, 
                     data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))
```

```{r p-values, echo = F, warning = F, message = F, results='hide'}
## Reading
reading_full <- lm(ReadingScore ~ ., data = data_cleaned %>% select(-c(MathScore, WritingScore)))

ols_step_forward_p(reading_full)
reading_pval_for <- lm(ReadingScore ~ Gender + LunchType + TestPrep + ParentEduc + EthnicGroup + 
                         ParentMaritalStatus + IsFirstChild + WklyStudyHours + TransportMeans, 
                    data = data_cleaned %>% select(-c(MathScore, WritingScore)))

ols_step_backward_p(reading_full)
reading_pval_back <- lm(ReadingScore ~ NrSiblings + PracticeSport, 
                    data = data_cleaned %>% select(-c(MathScore, WritingScore)))

ols_step_both_p(reading_full)
reading_pval_both <- lm(ReadingScore ~ Gender + LunchType + TestPrep + ParentEduc + EthnicGroup + 
                         ParentMaritalStatus + IsFirstChild + WklyStudyHours, 
                    data = data_cleaned %>% select(-c(MathScore, WritingScore))) 
```

```{r p-values, echo = F, warning = F, message = F, results='hide'}
## Writing
writing_full <- lm(WritingScore ~ ., data = data_cleaned %>% select(-c(MathScore, ReadingScore)))

ols_step_forward_p(writing_full)
writing_pval_for <- lm(WritingScore ~ TestPrep + Gender + LunchType + ParentEduc + EthnicGroup + 
                         ParentMaritalStatus + IsFirstChild + PracticeSport + WklyStudyHours, 
                    data = data_cleaned %>% select(-c(MathScore, ReadingScore)))

ols_step_backward_p(writing_full)
writing_pval_back <- lm(WritingScore ~ NrSiblings + TransportMeans, 
                    data = data_cleaned %>% select(-c(MathScore, ReadingScore)))

ols_step_both_p(writing_full)
writing_pval_both <- lm(WritingScore ~ TestPrep + Gender + LunchType + ParentEduc + EthnicGroup + 
                         ParentMaritalStatus + IsFirstChild + PracticeSport + WklyStudyHours, 
                    data = data_cleaned %>% select(-c(MathScore, ReadingScore))) # same as forward
```

\\

```{r BIC, warning = F, message = F, echo = F, results='hide'}
# Math
stepwise(math_full, direction = "backward", criterion = "BIC") # labels it as AIC but it's BIC
math_BIC_back <- lm(MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + TestPrep, 
                    data = data_cleaned %>% select(-c(ReadingScore, WritingScore)))

stepwise(math_full, direction = "forward", criterion = "BIC") 
math_BIC_for <- lm(MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + TestPrep, 
                    data = data_cleaned %>% select(-c(ReadingScore, WritingScore))) # same as backward

stepwise(math_full, direction = "forward/backward", criterion = "BIC") 
math_BIC_both <- lm(MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + TestPrep, 
                    data = data_cleaned %>% select(-c(ReadingScore, WritingScore))) # same as backward & forward
```

```{r BIC, warning = F, message = F, echo = F, results='hide'}
# Reading
stepwise(reading_full, direction = "backward", criterion = "BIC") # labels it as AIC but it's BIC
reading_BIC_back <- lm(ReadingScore ~ Gender + ParentEduc + LunchType + TestPrep, 
                    data = data_cleaned %>% select(-c(MathScore, WritingScore)))

stepwise(reading_full, direction = "forward", criterion = "BIC") 
reading_BIC_for <- lm(ReadingScore ~ Gender + ParentEduc + LunchType + TestPrep, 
                    data = data_cleaned %>% select(-c(MathScore, WritingScore))) # same as backward

stepwise(reading_full, direction = "forward/backward", criterion = "BIC") 
reading_BIC_both <- lm(ReadingScore ~ Gender + ParentEduc + LunchType + TestPrep, 
                    data = data_cleaned %>% select(-c(MathScore, WritingScore))) # same as backward and forward
```

```{r BIC, warning = F, message = F, echo = F, results='hide'}
# Writing
stepwise(writing_full, direction = "backward", criterion = "BIC") # labels it as AIC but it's BIC
writing_BIC_back <- lm(WritingScore ~ Gender + EthnicGroup + ParentEduc + LunchType + TestPrep, 
                    data = data_cleaned %>% select(-c(MathScore, ReadingScore)))

stepwise(writing_full, direction = "forward", criterion = "BIC") 
writing_BIC_for <- lm(WritingScore ~ Gender + EthnicGroup + ParentEduc + LunchType + TestPrep, 
                    data = data_cleaned %>% select(-c(MathScore, ReadingScore))) # same as backward

stepwise(writing_full, direction = "forward/backward", criterion = "BIC") 
writing_BIC_both <- lm(WritingScore ~ Gender + EthnicGroup + ParentEduc + LunchType + TestPrep, 
                    data = data_cleaned %>% select(-c(MathScore, ReadingScore))) # same as backward & forward
```


\\

```{r adj R2, echo = F, results = "hide", message= F, warning=F}
# Math
ss <- regsubsets(MathScore ~ .,
               data = data_cleaned %>% select(-c(WritingScore, ReadingScore)),
               nbest = 1,       # 1 best model for each number of predictors
               nvmax = NULL,    # NULL for no limit on number of variables
               force.in = NULL, force.out = NULL,
               method = "exhaustive")
summary.out <- summary(ss)
which.max(summary.out$adjr2)
summary.out$which[16,]

math_adjR2 <- lm(MathScore ~ Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + 
                   PracticeSport + IsFirstChild + NrSiblings + TransportMeans + WklyStudyHours, 
                 data = data_cleaned %>% select(-c(WritingScore, ReadingScore)))
```

```{r adj R2, echo = F, results = "hide", message= F, warning=F}
# Writing
ss_wr <- regsubsets(WritingScore ~ .,
               data = data_cleaned %>% select(-c(MathScore, ReadingScore)),
               nbest = 1,       # 1 best model for each number of predictors
               nvmax = NULL,    # NULL for no limit on number of variables
               force.in = NULL, force.out = NULL,
               method = "exhaustive")

summary.out <- summary(ss_wr)
which.max(summary.out$adjr2)
summary.out$which[16,]
writing_adjR2 <- lm(WritingScore ~ Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + 
                   PracticeSport + IsFirstChild + NrSiblings + TransportMeans + WklyStudyHours, 
                 data = data_cleaned %>% select(-c(MathScore, ReadingScore))) # same as math
```

```{r adj R2, echo = F, results = "hide", message= F, warning=F}
# Reading
ss_read <- regsubsets(ReadingScore ~ .,
               data = data_cleaned %>% select(-c(WritingScore, MathScore)),
               nbest = 1,       # 1 best model for each number of predictors
               nvmax = NULL,    # NULL for no limit on number of variables
               force.in = NULL, force.out = NULL,
               method = "exhaustive")

summary.out <- summary(ss_read)
which.max(summary.out$adjr2)
summary.out$which[16,]
reading_adjR2 <- lm(WritingScore ~ Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + 
                   PracticeSport + IsFirstChild + NrSiblings + TransportMeans + WklyStudyHours, 
                 data = data_cleaned %>% select(-c(MathScore, ReadingScore))) # same as math & writing
```

\\

\\


```{r all models, eval = F, results = "hide", echo = F, message=F, warning=F}
## List of our models:
## AIC (same for each outcome)
math_back
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + PracticeSport +IsFirstChild + WklyStudyHours
writing_back 
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours
reading_back 
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + IsFirstChild +  WklyStudyHours

math_for
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + PracticeSport +IsFirstChild + WklyStudyHours
writing_for
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + PracticeSport +IsFirstChild + WklyStudyHours
reading_for
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + IsFirstChild + WklyStudyHours

math_both
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + WklyStudyHours
writing_both
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + PracticeSport +IsFirstChild + WklyStudyHours
reading_both
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + IsFirstChild + WklyStudyHours


## BIC
math_BIC_back # Gender + EthnicGroup + ParentEduc + LunchType + TestPrep
writing_BIC_back # Gender + EthnicGroup + ParentEduc + LunchType + TestPrep
reading_BIC_back # Gender + ParentEduc + LunchType + TestPrep

math_BIC_for # Gender + EthnicGroup + ParentEduc + LunchType + TestPrep
writing_BIC_for # Gender + EthnicGroup + ParentEduc + LunchType + TestPrep
reading_BIC_for # Gender + ParentEduc + LunchType + TestPrep

math_BIC_both # Gender + EthnicGroup + ParentEduc + LunchType + TestPrep
writing_BIC_both # Gender + EthnicGroup + ParentEduc + LunchType + TestPrep
reading_BIC_both # Gender + ParentEduc + LunchType + TestPrep

## P-values
math_pval_back # TransportMeans
writing_pval_back # NrSiblings + TransportMeans
reading_pval_back # NrSiblings + PracticeSport

math_pval_for 
# LunchType + TestPrep + EthnicGroup + Gender + ParentEduc + WklyStudyHours + ParentMaritalStatus + IsFirstChild + PracticeSport + NrSiblings
writing_pval_for 
# TestPrep + Gender + LunchType + ParentEduc + EthnicGroup + ParentMaritalStatus + IsFirstChild + PracticeSport + WklyStudyHours
reading_pval_for
# Gender + LunchType + TestPrep + ParentEduc + EthnicGroup + ParentMaritalStatus + IsFirstChild + WklyStudyHours + TransportMeans

math_pval_both 
# LunchType + TestPrep + EthnicGroup + Gender + ParentEduc + WklyStudyHours + ParentMaritalStatus + IsFirstChild + PracticeSport
writing_pval_both 
# TestPrep + Gender + LunchType + ParentEduc + EthnicGroup + ParentMaritalStatus + IsFirstChild + PracticeSport + WklyStudyHours
reading_pval_both
# Gender + LunchType + TestPrep + ParentEduc + EthnicGroup + ParentMaritalStatus + IsFirstChild + WklyStudyHours

## Adjusted R^2, (all same for each outcome)
math_adjR2 
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + NrSiblings + TransportMeans + WklyStudyHours
writing_adjR2
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + NrSiblings + TransportMeans + WklyStudyHours
reading_adjR2
# Gender + EthnicGroup + ParentEduc + LunchType + TestPrep + ParentMaritalStatus + PracticeSport + IsFirstChild + NrSiblings + TransportMeans + WklyStudyHours
```

```{r comparisons}

```


## Conclusions/Discussion


## A brief summary on each group member's contribution (method, data analysis, writing, etc).


